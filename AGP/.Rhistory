ggboxplot(x = "hmo_Secretor", y = "x3SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Transitional", ylab = FALSE) + stat_compare_means() + ylim (-0.1, 2000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_mature <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 14 & infant_age_days < 90) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3SL == max(x3SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_mature_plot <- data_milk_feat_2FL_mature %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Mature", ylab = FALSE) + stat_compare_means() +  ylim (-0.1, 2000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
combined_2FL_lactation_stages <- ggarrange(data_milk_feat_2FL_colostrum_plot, data_milk_feat_2FL_trans_plot,
data_milk_feat_2FL_mature_plot, nrow = 1)
combined_2FL_lactation_stages
data_milk_feat_2FL_colostrum_plot <- data_milk_feat_2FL_colostrum %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Colostrum", ylab = "x3SL") + stat_compare_means() + ylim (-0.1, 1500) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_trans <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 5 & infant_age_days < 15) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3SL == max(x3SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_trans_plot <- data_milk_feat_2FL_trans %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Transitional", ylab = FALSE) + stat_compare_means() + ylim (-0.1, 1500) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_mature <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 14 & infant_age_days < 90) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3SL == max(x3SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_mature_plot <- data_milk_feat_2FL_mature %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Mature", ylab = FALSE) + stat_compare_means() +  ylim (-0.1, 1500) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
combined_2FL_lactation_stages <- ggarrange(data_milk_feat_2FL_colostrum_plot, data_milk_feat_2FL_trans_plot,
data_milk_feat_2FL_mature_plot, nrow = 1)
combined_2FL_lactation_stages
###
data_milk_feat_2FL_colostrum <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3FL, hmo_Secretor) %>%
dplyr::filter(infant_age_days < 5) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3FL == max(x3FL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_colostrum_plot <- data_milk_feat_2FL_colostrum %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3FL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Colostrum", ylab = "x3FL") + stat_compare_means() + ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_trans <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3FL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 5 & infant_age_days < 15) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3FL == max(x3FL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_trans_plot <- data_milk_feat_2FL_trans %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3FL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Transitional", ylab = FALSE) + stat_compare_means() + ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_mature <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3FL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 14 & infant_age_days < 90) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3FL == max(x3FL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_mature_plot <- data_milk_feat_2FL_mature %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3FL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Mature", ylab = FALSE) + stat_compare_means() +  ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
combined_2FL_lactation_stages <- ggarrange(data_milk_feat_2FL_colostrum_plot, data_milk_feat_2FL_trans_plot,
data_milk_feat_2FL_mature_plot, nrow = 1)
combined_2FL_lactation_stages
### 6SL
data_milk_feat_2FL_colostrum <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x6SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days < 5) %>%
group_by(host_subject_id) %>%
dplyr::filter(x6SL == max(x6SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_colostrum_plot <- data_milk_feat_2FL_colostrum %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x6SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Colostrum", ylab = "x6SL") + stat_compare_means() + ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_trans <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x6SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 5 & infant_age_days < 15) %>%
group_by(host_subject_id) %>%
dplyr::filter(x6SL == max(x6SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_trans_plot <- data_milk_feat_2FL_trans %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x6SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Transitional", ylab = FALSE) + stat_compare_means() + ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_mature <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x6SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 14 & infant_age_days < 90) %>%
group_by(host_subject_id) %>%
dplyr::filter(x6SL == max(x6SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_mature_plot <- data_milk_feat_2FL_mature %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x6SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Mature", ylab = FALSE) + stat_compare_means() +  ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
combined_2FL_lactation_stages <- ggarrange(data_milk_feat_2FL_colostrum_plot, data_milk_feat_2FL_trans_plot,
data_milk_feat_2FL_mature_plot, nrow = 1)
combined_2FL_lactation_stages
data_milk_feat_2FL_colostrum_plot <- data_milk_feat_2FL_colostrum %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x6SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Colostrum", ylab = "x6SL") + stat_compare_means() + ylim (-0.1, 1500) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_trans <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x6SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 5 & infant_age_days < 15) %>%
group_by(host_subject_id) %>%
dplyr::filter(x6SL == max(x6SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_trans_plot <- data_milk_feat_2FL_trans %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x6SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Transitional", ylab = FALSE) + stat_compare_means() + ylim (-0.1, 1500) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_mature <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x6SL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 14 & infant_age_days < 90) %>%
group_by(host_subject_id) %>%
dplyr::filter(x6SL == max(x6SL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_mature_plot <- data_milk_feat_2FL_mature %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x6SL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Mature", ylab = FALSE) + stat_compare_means() +  ylim (-0.1, 1500) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
combined_2FL_lactation_stages <- ggarrange(data_milk_feat_2FL_colostrum_plot, data_milk_feat_2FL_trans_plot,
data_milk_feat_2FL_mature_plot, nrow = 1)
combined_2FL_lactation_stages
View(VIPs_milk_secretor_Load)
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x_2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman") +
theme_classic()
scatter_2FL <- ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman") +
theme_classic()
scatter_2FL
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
scatter_2FL <- ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman") +
theme_classic()
data_milk_feat_DFLac <- data_milk %>%
dplyr::select(SampleID, `769`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`769` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_DFLac_targeted = log2(`DFLac` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
scatter_dflac <- ggscatter(data_milk_feat_DFLac,
x = "Log_DFLac_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman") +
theme_classic()
scatter_dflac
combined_scatter <- ggarrange(scatter_2FL, scatter_dflac, nrow = 1)
combined_scatter
ggsave(plot = combined_scatter, filename = "combined_scatter.svg", device = "svg", dpi = "retina", width = 4.5, height = 2.3)
data_milk_feat_DFLac <- data_milk %>%
dplyr::select(SampleID, `769`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`769` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_DFLac_targeted = log2(`DFLac` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
scatter_dflac <- ggscatter(data_milk_feat_DFLac,
x = "Log_DFLac_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman") +
theme_classic()
scatter_dflac
scatter_dflac <- ggscatter(data_milk_feat_DFLac,
x = "Log_DFLac_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson") +
theme_classic()
scatter_dflac
scatter_2FL <- ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson") +
theme_classic()
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
scatter_2FL <- ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson") +
theme_classic()
scatter_2FL
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
scatter_2FL <- ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson") +
theme_classic()
scatter_2FL
data_milk_feat_DFLac <- data_milk %>%
dplyr::select(SampleID, `769`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`769` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_DFLac_targeted = log2(`DFLac` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
scatter_dflac <- ggscatter(data_milk_feat_DFLac,
x = "Log_DFLac_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson") +
theme_classic()
scatter_dflac
### 3FL
data_milk_feat_2FL_colostrum <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3FL, hmo_Secretor) %>%
dplyr::filter(infant_age_days < 5) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3FL == max(x3FL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_colostrum_plot <- data_milk_feat_2FL_colostrum %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3FL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Colostrum", ylab = "x3FL") + stat_compare_means() + ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_trans <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3FL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 5 & infant_age_days < 15) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3FL == max(x3FL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_trans_plot <- data_milk_feat_2FL_trans %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3FL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Transitional", ylab = FALSE) + stat_compare_means() + ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
data_milk_feat_2FL_mature <- hmo_data %>%
dplyr::select(host_subject_id, infant_age_days, x3FL, hmo_Secretor) %>%
dplyr::filter(infant_age_days > 14 & infant_age_days < 90) %>%
group_by(host_subject_id) %>%
dplyr::filter(x3FL == max(x3FL, na.rm = TRUE)) %>%
ungroup() %>% distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::filter(!hmo_Secretor == "NA")
data_milk_feat_2FL_mature_plot <- data_milk_feat_2FL_mature %>% arrange(hmo_Secretor) %>%
ggboxplot(x = "hmo_Secretor", y = "x3FL", add = "jitter", legend = "none",
add.params = list(color = "hmo_Secretor", alpha = 0.5), palette = rev_palette_hmo,
xlab = "Mature", ylab = FALSE) + stat_compare_means() +  ylim (-0.1, 6000) +
theme(plot.title = element_text(size = 9),axis.title = element_text(size = 8),
axis.text = element_text(size = 6))
combined_2FL_lactation_stages <- ggarrange(data_milk_feat_2FL_colostrum_plot, data_milk_feat_2FL_trans_plot,
data_milk_feat_2FL_mature_plot, nrow = 1)
combined_2FL_lactation_stages
ggsave(plot = combined_2FL_lactation_stages, filename = "combined_3FL_lactation_stages.svg", device = "svg", dpi = "retina", width = 2.8, height = 2.3)
ggsave(plot = combined_2FL_lactation_stages, filename = "combined_3FL_lactation_stages.svg", device = "svg", dpi = "retina", width = 2.5, height = 2)
ggsave(plot = combined_2FL_lactation_stages, filename = "combined_3FL_lactation_stages.svg", device = "svg", dpi = "retina", width = 2.6, height = 2.2)
ggsave(plot = combined_2FL_lactation_stages, filename = "combined_3FL_lactation_stages.svg", device = "svg", dpi = "retina", width = 2.6, height = 2.1)
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1") %>%
dplyr::filter(!Log_feat_untargeted=="0")
data_milk_feat_2FL <- data_milk %>%
dplyr::select(SampleID, `583`) %>%
dplyr::mutate(Log_feat_untargeted = log2(`583` + 1)) %>%
left_join(hmo_data, by = "SampleID") %>%
dplyr::mutate(Log_2FL_targeted = log2(`x2FL` + 1)) %>%
dplyr::filter(hmo_Secretor=="1")
scatter_2FL <- ggscatter(data_milk_feat_2FL,
x = "Log_2FL_targeted", y = "Log_feat_untargeted",
color = "#80B6A3", fill = "#80B6A3",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson") +
theme_classic()
scatter_2FL
View(data_milk_feat_2FL)
setwd("/Users/kinekvitne/Library/CloudStorage/OneDrive-UniversityofCalifornia,SanDiegoHealth/POSTDOC/UCSD/PROJECTS/DRUG LIBRARY/drug_library_revised/updated_code_github/AGP")
# Read data
feature_table <- read.csv("20240507_AGP_NoGapFill_BlkRm_LODcheck.csv", sep = ",")
annotations <- read.delim("merged_results_with_gnps.tsv", header = TRUE, stringsAsFactors = FALSE)
ReDu_AGP <- read.csv("ReDu_metadata_AGP.csv") #MSV000080673
data_10317_2136 <- read.csv("qiita_metadata_IDs_10317_2136.csv")
feature_table_t <- feature_table %>% column_to_rownames("X") %>% t() %>% as.data.frame() %>% rownames_to_column("SampleID")
feature_table_t_pivot <- feature_table_t %>% pivot_longer(!SampleID, names_to = "Drug", values_to = "PeakArea") %>% dplyr::filter(PeakArea =="TRUE")
# Exclude annotations with shared peaks <=4 and cosine <0.9
annotations <- annotations %>% dplyr::filter(!(SharedPeaks <= 4 & MQScore < 0.9))
# Manual inspection (shared peaks <= 4 and cosine >= 0.9)
# Features to be excluded
annotations_curated <- annotations %>%
dplyr::filter(!(X.Scan. %in% c("3799")))
AGP_annotations <- annotations_curated %>%
dplyr::select(SpectrumID, Compound_Name, X.Scan.)
AGP_annotations$X.Scan. <- as.character(AGP_annotations$X.Scan.)
AGP_info <- feature_table_t_pivot %>% left_join(AGP_annotations, by = c("Drug" = "X.Scan."))
AGP_info$SampleID <- gsub(".mzML.Peak.area", "", AGP_info$SampleID)
AGP_info$SampleID <- substring(AGP_info$SampleID, 2)
ReDu_AGP$filename <- str_extract(ReDu_AGP$filename, "[^/]*$")
ReDu_AGP$filename <- gsub(".mzML", "", ReDu_AGP$filename)
ReDu_AGP$filename <- gsub(".mzXML", "", ReDu_AGP$filename)
ReDu_AGP_annotations <- AGP_info %>% left_join(ReDu_AGP, by = c("SampleID" = "filename"))
AGP_combined <- ReDu_AGP_annotations %>%
dplyr::mutate(anonymized_name = gsub("_.*", "", SampleID)) %>%
left_join(data_10317_2136)
# Look at samples collected from the ICU in AGP
AGP_2136 <- AGP_combined %>%
dplyr::filter(Cohort == "ICU")
unique_IDs_2136 <- AGP_2136 %>% # n = 93
dplyr::distinct(host_subject_id, .keep_all = TRUE)
# Exclude ICU samples
AGP_10317 <- AGP_combined %>%
dplyr::filter(Cohort != "ICU") %>%
filter(!is.na(ATTRIBUTE_DatasetAccession))
# Look if any IDs have multiple samples
ids_with_multiple_timestamps <- AGP_10317 %>%
group_by(host_subject_id) %>%
filter(n_distinct(collection_timestamp) > 1) %>%
distinct(host_subject_id) # 47 individuals had multiple samples
timestamp_counts <- AGP_10317 %>%
group_by(host_subject_id) %>%
summarize(n_timestamps = n_distinct(collection_timestamp)) %>%
filter(n_timestamps > 1)
# Keep only the first sample for individuals with multiple samples
filtered_data <- AGP_10317 %>%
group_by(host_subject_id) %>%
slice_min(order_by = collection_timestamp, with_ties = FALSE) %>%
dplyr::select(host_subject_id, collection_timestamp)
merged_data <- AGP_10317 %>%
inner_join(filtered_data, by = c("host_subject_id", "collection_timestamp"))
# Exclude countries with few samples
country_counts <- merged_data %>%
group_by(Country) %>%
summarize(unique_host_subjects = n_distinct(host_subject_id)) %>%
arrange(desc(unique_host_subjects))
selected_regions <- merged_data %>%
mutate(Region = case_when(
Country == "United States of America" ~ "United States",
Country %in% c("United Kingdom", "France", "Germany", "Norway", "Netherlands",
"Ireland", "Italy", "Sweden", "Latvia", "Spain", "Austria", "Czech Republic",
"Finland", "Switzerland", "Slovakia") ~ "Europe",
Country == "Australia" ~ "Australia",
TRUE ~ NA_character_
)) %>%
dplyr::filter(Region %in% c("Australia", "Europe", "United States"))
unique_IDs_AGP_10317 <- selected_regions %>% # n = 1,993
dplyr::distinct(host_subject_id, .keep_all = TRUE)
# Read final data AGP
AGP_10317 <- read.csv("AGP_10317_final.csv", sep = ",") %>%
dplyr::select(-1)
# Look at demographic data such as age and sex
AGP_age_sex <- AGP_10317 %>% # Have info on age and sex for 1845 individuals
dplyr::distinct(host_subject_id, .keep_all = TRUE) %>%
dplyr::mutate(AgeInYears = round(as.numeric(AgeInYears))) %>%
filter(!is.na(AgeInYears),
!is.na(BiologicalSex),
!AgeInYears %in% c("not collected", "not applicable", "not specified", ""),
!BiologicalSex %in% c("not collected", "not applicable", "not specified", ""))
class_counts <- table(AGP_age_sex$BiologicalSex)
print(class_counts)
mean(AGP_age_sex$AgeInYears)
sd(AGP_age_sex$AgeInYears)
min(AGP_age_sex$AgeInYears)
max(AGP_age_sex$AgeInYears)
# Read data GNPS drug library
metadata_druglib <- read.csv("GNPS_Drug_Library_Metadata_Drugs.csv", sep = ",")
metadata_druglib <- metadata_druglib %>%
dplyr::select(-smiles)
metadata_druglib$name_connected_compound <- NA
colnames(metadata_druglib)
# Read data GNPS analog/suspect library
metadata_analog_suspect <- read.csv("GNPS_Drug_Library_Metadata_Drug_Analogs_Updated.csv", sep = ",")
metadata_analog_suspect <- metadata_analog_suspect %>%
dplyr::select(-delta_mass, -analog_mgf_scan, -analog_usi, -parent_drug_libid)
metadata_analog_suspect$name_parent_compound <- metadata_analog_suspect$name_connected_compound
colnames(metadata_analog_suspect)[colnames(metadata_analog_suspect) == "name_analog"] <- "name_compound"
colnames(metadata_analog_suspect)
colnames(metadata_analog_suspect)[colnames(metadata_analog_suspect) == "analog_libid"] <- "gnps_libid"
# Combine metadata for the GNPS drug library and analog/suspect library
all_metadata <- rbind(metadata_druglib, metadata_analog_suspect)
# Combine data with the GNPS drug library metadata
# Remove duplicates
AGP_druglib <- AGP_10317 %>%
dplyr::filter(SpectrumID %in% all_metadata$gnps_libid) %>%
left_join(all_metadata, by = c("SpectrumID" = "gnps_libid")) %>%
distinct(SampleID, name_compound, .keep_all = TRUE) %>%
dplyr::filter(chemical_source %in% c("Medical","Drug metabolite","Drug_analog"))
# Generate a frequency table to summarize detected drugs
freq_table <- table(AGP_druglib$name_parent_compound)
freq_df <- as.data.frame(freq_table) %>% arrange(desc(Freq))
# Standardize specific compound names for consistency before downstream analysis
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "n-acetyl mesalazine", "mesalazine", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "omeprazole sulfide 5-carboxylic acid", "omeprazole", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "atenolol|metoprolol", "metoprolol", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "clarithromycin|erythromycin", "erythromycin", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "quetiapine sulfoxide ", "quetiapine", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "clindamycin n-oxide", "clindamycin", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "clindamycin sulfoxide", "clindamycin", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "albendazole ", "albendazole", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "losartan|losartan", "losartan", AGP_druglib$name_parent_compound)
AGP_druglib$name_parent_compound <- ifelse(AGP_druglib$name_parent_compound == "losartan ", "losartan", AGP_druglib$name_parent_compound)
# Remove duplicates again since for some individuals we detect both the parent compound and drug metabolites
AGP_druglib <- AGP_druglib %>%
dplyr::filter(chemical_source %in% c("Medical","Drug metabolite","Drug_analog")) %>%
distinct(SampleID, name_parent_compound, .keep_all = TRUE)
AGP_druglib <- read.csv("AGP_10317_druglib_annotations.csv", sep = ",") %>%
dplyr::select(-1)
# Count number of unique parent compounds detected
count_detected_drugs <- AGP_druglib %>%
dplyr::distinct(name_parent_compound, .keep_all = TRUE) # n = 89
# Count number of unique IDs where drug was detected
unique_IDs_drug <- AGP_druglib %>%
dplyr::distinct(host_subject_id, .keep_all = TRUE)
View(AGP_druglib)
for_vinc <- AGP_druglib %>%
dplyr::filter(pharmacologic_class=="angiotensin converting enzyme inhibitor")
write_csv(for_vinc, "AGP_ACE_inhibitors")
write_csv(for_vinc, "AGP_ACE_inhibitors.csv")
# Unknown feature
table_feat_7024 <- matrix(c(15, 28, 75, 3024),
nrow = 2, byrow = TRUE,
dimnames = list(c("Presence", "Absence"), c("IBD", "Healthy")))
print(table_feat_7024)
chisq.test(table_feat_7024)
table_feat_7024 <- matrix(c(5, 28, 46, 3024),
nrow = 2, byrow = TRUE,
dimnames = list(c("Presence", "Absence"), c("IBD", "Healthy")))
print(table_feat_7024)
chisq.test(table_feat_7024)
